#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webapis2.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db124de19f000744518212a7130082cae3")]
	public partial class dbmanageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbllogin(tbllogin instance);
    partial void Updatetbllogin(tbllogin instance);
    partial void Deletetbllogin(tbllogin instance);
    #endregion
		
		public dbmanageDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db124de19f000744518212a7130082cae3ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbmanageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmanageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmanageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbmanageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbllogin> tbllogins
		{
			get
			{
				return this.GetTable<tbllogin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbllogin")]
	public partial class tbllogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _loginid;
		
		private string _username;
		
		private string _emailid;
		
		private string _mobilenumber;
		
		private string _status;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnloginidChanging(int value);
    partial void OnloginidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailidChanging(string value);
    partial void OnemailidChanged();
    partial void OnmobilenumberChanging(string value);
    partial void OnmobilenumberChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public tbllogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int loginid
		{
			get
			{
				return this._loginid;
			}
			set
			{
				if ((this._loginid != value))
				{
					this.OnloginidChanging(value);
					this.SendPropertyChanging();
					this._loginid = value;
					this.SendPropertyChanged("loginid");
					this.OnloginidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailid", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string emailid
		{
			get
			{
				return this._emailid;
			}
			set
			{
				if ((this._emailid != value))
				{
					this.OnemailidChanging(value);
					this.SendPropertyChanging();
					this._emailid = value;
					this.SendPropertyChanged("emailid");
					this.OnemailidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobilenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mobilenumber
		{
			get
			{
				return this._mobilenumber;
			}
			set
			{
				if ((this._mobilenumber != value))
				{
					this.OnmobilenumberChanging(value);
					this.SendPropertyChanging();
					this._mobilenumber = value;
					this.SendPropertyChanged("mobilenumber");
					this.OnmobilenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
